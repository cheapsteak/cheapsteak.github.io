<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Chang Wang</title>
 <link href="http://www.cheapsteak.net/atom.xml" rel="self"/>
 <link href="http://www.cheapsteak.net/"/>
 <updated>2013-09-23T14:04:52+08:00</updated>
 <id>http://www.cheapsteak.net/</id>
 <author>
   <name>Chang Wang</name>
 </author>

 
 <entry>
   <title>Responsive template swapping with Angular Directives</title>
   <link href="http://www.cheapsteak.net/posts/responsive-template-swapping-with-angular"/>
   <updated>2013-09-22T00:00:00+08:00</updated>
   <id>http://www.cheapsteak.net//posts/responsive-template-swapping-with-angular</id>
   <content type="html">&lt;p&gt;I've posted a few days ago on &lt;a href=&quot;/posts/responsive-template-swapping-with-backbone&quot;&gt;responsive template swapping with Backbone&lt;/a&gt;, here's an example showing how to do that in Angular using a custom Directive.&lt;/p&gt;

&lt;p&gt;&lt;button id=&quot;angular-toggler&quot; class=&quot;hide-mid&quot;&gt;Toggle width&lt;/button&gt;&lt;/p&gt;

&lt;p data-height=&quot;340&quot; data-theme-id=&quot;1188&quot; data-slug-hash=&quot;hfAxn&quot; data-user=&quot;cheapsteak&quot; data-default-tab=&quot;result&quot; class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/cheapsteak/pen/hfAxn'&gt;hfAxn&lt;/a&gt; by Chang Wang (&lt;a href='http://codepen.io/cheapsteak'&gt;@cheapsteak&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;&lt;/p&gt;


&lt;script async src=&quot;http://codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;




&lt;script&gt;
    window.deferreds = window.deferreds || [];
    window.deferreds.push(function () {
        $('#angular-toggler').click(function () {
            $('#cp_embed_hfAxn')
                .addClass('ease-in-out-back force-acceleration')
                .toggleClass('contracted');
        });
    });
&lt;/script&gt;


&lt;!--more--&gt;


&lt;p&gt;The custom &lt;code&gt;breakpoint&lt;/code&gt; directive takes a media-query as an argument (in this case &lt;code&gt;min-width: 44.375em&lt;/code&gt;) and creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/MediaQueryList&quot;&gt;MediaQueryList&lt;/a&gt; &lt;code&gt;mql&lt;/code&gt; and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListListener&quot;&gt;MediaQueryListListener&lt;/a&gt; &lt;code&gt;mqlListener&lt;/code&gt;, which will update our custom scope variable &lt;code&gt;matches&lt;/code&gt; so it will always reflect the result of the media-query (in our case, &lt;code&gt;scope.matches&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt; when width is smaller than &lt;code&gt;44.375em&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; when width is larger).&lt;/p&gt;

&lt;p&gt;Since the media-query event that triggers the change to the scope variable &lt;code&gt;matches&lt;/code&gt; is not generated by Angular, we will need to update our view by calling &lt;code&gt;scope.$apply()&lt;/code&gt; to manually start the digest cycle. However, since page-load doesn't trigger media-query events, and since we still want the right layout to be displayed on page-load, we also need to make a direct call to &lt;code&gt;mqlListener(mql)&lt;/code&gt; during the directive's initialization, which is during an existing digest cycle. Calling &lt;code&gt;scope.$apply()&lt;/code&gt; then would result in an &lt;code&gt;Action Alredy In Progress&lt;/code&gt; error, so we check &lt;code&gt;scope.$$phase&lt;/code&gt; and only call scope.$apply when not in an existing digest cycle. Hence the weird looking:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$$phase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// make sure we&amp;#39;re not in the middle of a digest cycle&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//start the digest cycle&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This and the Backbone example are &lt;a href=&quot;https://github.com/cheapsteak/ResponsiveTemplateSwapComparison&quot;&gt;available on GitHub&lt;/a&gt;. Shoot me a pull request or a &lt;a href=&quot;https://twitter.com/CheapSteak&quot;&gt;tweet&lt;/a&gt; and let me know what you think!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Responsive template swapping with Backbone</title>
   <link href="http://www.cheapsteak.net/posts/responsive-template-swapping-with-backbone"/>
   <updated>2013-09-13T00:00:00+08:00</updated>
   <id>http://www.cheapsteak.net//posts/responsive-template-swapping-with-backbone</id>
   <content type="html">&lt;p&gt;CSS media queries sometimes aren't quite enough to get a design &quot;just right&quot; for every screen-size, especially for web-apps where you might want to change the UI more drastically than more content-centric blogs or product-pages.&lt;/p&gt;

&lt;p&gt;For Backbone applications, here's an example using &lt;code&gt;window.matchMedia&lt;/code&gt; to swap which template to render depending on whether a given media query matches.&lt;/p&gt;

&lt;p&gt;&lt;button id=&quot;backbone-toggler&quot; class=&quot;hide-mid&quot; data-target=&quot;#cp_embed_nBulI&quot; data-class=&quot;contracted&quot;&gt;Toggle width&lt;/button&gt;&lt;/p&gt;

&lt;p data-height=&quot;350&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;nBulI&quot; data-user=&quot;cheapsteak&quot; data-default-tab=&quot;result&quot; class='codepen'&gt;See the Pen &lt;a href='http://codepen.io/cheapsteak/pen/nBulI'&gt;Responsive template swapping with Backbone&lt;/a&gt; by Chang Wang (&lt;a href='http://codepen.io/cheapsteak'&gt;@cheapsteak&lt;/a&gt;) on &lt;a href='http://codepen.io'&gt;CodePen&lt;/a&gt;&lt;/p&gt;


&lt;script async src=&quot;http://codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;


&lt;script&gt;
    window.deferreds = window.deferreds || [];
    window.deferreds.push(function () {
        $('#backbone-toggler').click(function () {
            $('#cp_embed_nBulI')
                .addClass('ease-in-out-back force-acceleration')
                .toggleClass('contracted');
        });
    });
&lt;/script&gt;


&lt;!--more--&gt;


&lt;p&gt;If you're not already familiar with &lt;code&gt;matchMedia&lt;/code&gt;, I would suggest taking a look at &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Testing_media_queries?redirectlocale=en-US&amp;amp;redirectslug=DOM%2FUsing_media_queries_from_code&quot;&gt;MDN's examples&lt;/a&gt; that do a great job of showing how it's used.&lt;/p&gt;

&lt;p&gt;My initial iteration of the view was a bit less complex:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ResponsiveView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mqlListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchedTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unmatchedTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;breakpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;mql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mqlListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;mqlListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matchedTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//IE9 and older&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;repos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A MediaQueryList &lt;code&gt;mql&lt;/code&gt; and a MediaQueryListListener &lt;code&gt;mqlListener&lt;/code&gt; are created in the view's constructor. Whenever the test result from mql's query &lt;code&gt;breakpoint&lt;/code&gt; changes, mqlListener is called and sets the appropriate template for the view and calls &lt;code&gt;render&lt;/code&gt; to redraw everything. &lt;em&gt;(By the way, you can omit the check for &lt;code&gt;window.matchMedia&lt;/code&gt; if you already have it polyfilled for IE9 and below)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This has a problem though - Zombie Views. This is because &lt;code&gt;mqlListener&lt;/code&gt; holds a reference to the view, and since &lt;code&gt;mqlListener&lt;/code&gt; isn't ever removed, the view will never be garbage-collected.&lt;/p&gt;

&lt;p&gt;To solve that, we need to have a handle on both &lt;code&gt;mql&lt;/code&gt; and &lt;code&gt;mqlListener&lt;/code&gt; so we can remove the listener when the view's &lt;code&gt;remove&lt;/code&gt; method is called, and since we have to overwrite the original &lt;code&gt;remove&lt;/code&gt; to do that, &lt;code&gt;Backbone.View.prototype.remove.call(this)&lt;/code&gt; is required as a way of calling &lt;code&gt;remove&lt;/code&gt;'s super function.&lt;/p&gt;

&lt;p&gt;I'm still getting into &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and haven't implemented commenting yet. If you have an improvement or see any pitfalls with this method, please shoot me a &lt;a href=&quot;http://twitter.com/cheapsteak&quot;&gt;tweet&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>